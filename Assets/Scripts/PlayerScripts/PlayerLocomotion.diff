 public class PlayerLocomotion : MonoBehaviour, IMovable, IPullable
 {
@@
-    public void Move(Vector2 move, Rigidbody2D rb, float velocity)
-    {
-        
-        //LastMoveVector = move; //(0,0)이어도 상관 없음 -> 이동하지 않는 상태니까
-        GetComponentInParent<KinematicMotor2D>()?.SweepMove(move);
-    }
+    public void Move(Vector2 move, Rigidbody2D rb, float velocity)
+    {
+        // 입력은 '속도 벡터' 기준 → 프레임 독립 델타로 환산하여 모터에 1회/프레임만 전달
+        var motor = GetComponentInParent<KinematicMotor2D>();
+        if (!motor) return;
+        Vector2 delta = move.normalized * velocity * Time.deltaTime;
+        var res = motor.SweepMove(delta);
+        // LastMoveVector는 이미 수정하셨으므로, 필요 시 여기서도 동기화 가능합니다.
+        // LastMoveVector = res.actualDelta;
+    }
