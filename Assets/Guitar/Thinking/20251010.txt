통신에 관한 부분을 조금 고민할 필요가 있을 것 같다

일단 통신 프로토콜에 대한 부분이다
통신 대전 게임은 일반적으로 Lockstep을 사용하는 것으로 보인다
로컬의 정보를 주기적으로 묶어 릴레이에 보내고, 릴레이는 양측의 정보를 기반으로 실제 데이터를 보정해서 반대쪽에 넘긴다
패킷 보내는 로직을 제대로 만들어두면 나중에 게임플레이가 불편해서 interval을 조정해야 할 때도 편리하다

패킷에는 프레임 카운터와 프레임 별 위치, 공격에 대한 정보를 담으면 좋을 것 같다
왜 위치를 보내나요? 입력을 직접 보내고 코어가 연산하게 만들면 안 되나요?
그러면 게임이 아주 deterministic하다는 장점이 있지만 여기는 큰 문제가 있다
구현이 너무 어려운데 나는 아직 그걸 구현할 준비가 안 된 것 같다
사실 그렇게 어려운 건 아님, Input Controller -> Locomotion -> Motor로 되어있던 명령 방식에 Core를 추가하면 됨
즉 Input Controller -> Core -> Locomotion -> Motor로 가면 된다

그럼 뭐가 마음에 안 드는가? 행동할 수 없는 경우에도 입력할 수가 있다
그런데 그걸 Core가 "아니 이놈 Stun인데 입력을 시도했잖아? 이건 무시해야지" 라는 판단을 한다
문제는 그걸 내 로컬 Core에서도, 상대 로컬 Core에서도 한다는 것
그런데 위치를 전달하면 아주 간단하다, 내 로컬에서만 못 움직이면 되는 거다
상대 로컬에서는 어차피 위치가 똑같으므로 분기 처리 할 필요가 없다, 즉 내 것만 내가 챙기면 된다는 식

물론 이 방법은 deterministic하지 않다, 내가 치트를 써서 Stun 상태에서 움직이려 들면 어떻게 할 건가
이러면 패킷에 Effect 정보를 넘기는 것도 방법 같다
Effect는 Stun, Slow, Tumbled 등의 효과 뿐만 아니라 Stack도 가지고 있다
상대가 중첩을 참조해야 할 일이 있을지는 모르겠지만 이렇게 확장의 실마리를 두는 것도 좋다고 본다
사실 "내가 지금 움직일 수 없다" 라는 것만 상대에게 전달할 수 있으면 어떤 방법이든 상관은 없다, 그냥 Effect 넘기기가 가장 처음 떠오른 방법일 뿐이다

이렇게 보면 리플레이 구현은 꽤 간단한 것 같다
그냥 양쪽의 프레임 별 데이터를 보여주면 되는 게 아닌가
물론 로컬 연산이 꽤 많아서 역재생은 불가하지만 더없이 손쉽게 리플레이를 만들 수 있다는 게 어디인가
사실 그 역재생을 하려면 모든 엔터티의 정보를 다 담아야 하지 않을까 싶다
플레이어 엔터티는 몰라도 투사체 하나하나 역행하게 만드는 건 어려워 보인다
벡터의 방향을 뒤집어 역행하게 만들자니 Towards Entity 타깃 타입이 문제다
어? 되나?
투사체 기준, 현재 프레임에서 적의 위치만 이전 프레임으로 돌린다
그 적의 위치를 향하도록 이동 벡터가 재구성된다
그리고 그 이동 벡터를 반대로 뒤집어 1프레임 이동한다, 속력은 알아서 제어 가능
이거 가능할 수도 있겠다, 하지만 일단 게임을 좀 만들고 나서 다시 생각해봐야 하겠다

아무튼 로컬이 대체로 연산을 수행하도록 만들고 싶다, 코어가 다 하면 할수록 코어는 점점 비대해지고 로컬은 그냥 결과 보는 장치가 되어버리는 느낌
공격도 "내가 공격했어", "이 공격 맞은 거 같은데 어때?" 같은 걸 전달한다
"이 공격 맞힌 거 같은데 어때?" 는 event로 호출한다: Core도 Enemy도 다 받아서 "그렇네", "맞았어" 를 확인한다
이 방법은 조금 문제가 있을지도 몰라서 조금 조심스럽게 생각할 필요가 있을 것 같다